# Default values for k8s-flask-react.

imagePullSecrets: []

services:
  webapp:
    nameOverride: flask-webapp
    fullnameOverride: flask-webapp
    service:
      name: webapp
      type: ClusterIP
      port: 8080
      health: /healthz
    image:
      repository: ch0ppy35/basic-flask-app
      pullPolicy: Always
      tag: "latest"
    replicaCount: 4
    podAnnotations: {}
    podSecurityContext: {}
      # fsGroup: 2000
    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000
    resources: {}
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi
    nodeSelector: {}
    tolerations: []
    affinity: {}
    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80
  react:
    nameOverride: react-app
    fullnameOverride: react-app
    service:
      name: react
      type: ClusterIP
      port: 80
      health: /
    image:
      repository: ch0ppy35/basic-flask-app-frontend
      pullPolicy: Always
      tag: "latest"
    replicaCount: 2
    podAnnotations: {}
    podSecurityContext: {}
      # fsGroup: 2000
    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000
    resources: {}
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi
    nodeSelector: {}
    tolerations: []
    affinity: {}
    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

ingress:
  enabled: true
  className: ""
  annotations: 
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: k8s.mikemiller.tech
      paths:
        - path: /?(.*)
          pathType: ImplementationSpecific
          serviceName: react
          servicePort: 80
        - path: /api/?(.*)
          pathType: ImplementationSpecific
          serviceName: webapp
          servicePort: 8080
  #tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""


